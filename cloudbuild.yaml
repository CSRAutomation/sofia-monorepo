steps:
# --- PASO 1: Construir y Subir Imagen (Solo para servicios de Cloud Run) ---
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build and Push Cloud Run Service'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # Este bloque solo se ejecuta si NO es el despliegue del agente de Vertex AI.
    if [ "$_SERVICE_NAME" != "agent-sofia" ]; then
      echo "Construyendo imagen para el servicio de Cloud Run: ${_SERVICE_NAME}"
      
      # Crear repo en Artifact Registry si no existe.
      gcloud artifacts repositories describe ${_SERVICE_NAME}-repo --location=us-central1 --quiet || \
      gcloud artifacts repositories create ${_SERVICE_NAME}-repo --repository-format=docker --location=us-central1 --description="Repo para el servicio ${_SERVICE_NAME}"

      # Construir la imagen de Docker.
      docker build -t us-central1-docker.pkg.dev/$PROJECT_ID/${_SERVICE_NAME}-repo/${_SERVICE_NAME}:latest -f services/${_SERVICE_NAME}/Dockerfile .
      
      # Subir la imagen a Artifact Registry.
      docker push us-central1-docker.pkg.dev/$PROJECT_ID/${_SERVICE_NAME}-repo/${_SERVICE_NAME}:latest
    else
      echo "Omitiendo construcción de imagen. Se está desplegando el agente de Vertex AI."
    fi

# --- PASO 2: Desplegar Servicio (Cloud Run o Agente de Vertex AI) ---
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Deploy Service or Agent'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # Lógica para desplegar servicios de Cloud Run.
    if [ "$_SERVICE_NAME" != "agent-sofia" ]; then
      echo "Desplegando servicio en Cloud Run: ${_SERVICE_NAME}"
      DEPLOY_ARGS=""
      if [ "$_SERVICE_NAME" == "salesforce-api" ]; then
        echo "Servicio salesforce-api detectado. Añadiendo secretos de Salesforce."
        DEPLOY_ARGS="--set-secrets=SF_USERNAME=sf-prod-username:latest \
                     --set-secrets=SF_CONSUMER_KEY=sf-prod-consumer-key:latest \
                     --set-secrets=SF_DOMAIN=sf-prod-domain:latest \
                     --set-secrets=SF_PRIVATE_KEY_CONTENT=sf-prod-private-key:latest"
      elif [ "$_SERVICE_NAME" == "twilio-api" ]; then
        echo "Servicio twilio-api detectado. Añadiendo secretos y URL del agente."
        DEPLOY_ARGS="--set-secrets=TWILIO_ACCOUNT_SID=twilio-account-sid:latest \
                     --set-secrets=TWILIO_AUTH_TOKEN=twilio-auth-token:latest \
                     --set-secrets=TWILIO_PHONE_NUMBER=twilio-phone-number:latest"
        # Obtenemos dinámicamente la URL del servicio del agente Sofía.
        AGENT_URL=$$(gcloud run services describe agent-sofia-service --platform managed --region us-central1 --format 'value(status.url)' 2>/dev/null)
        if [ -z "$$AGENT_URL" ]; then
          echo "Error crítico: No se pudo obtener la URL del servicio 'agent-sofia-service'."
          exit 1
        fi
        echo "URL de Agent API encontrada: $$AGENT_URL"
        DEPLOY_ARGS="$$DEPLOY_ARGS --set-env-vars=AGENT_API_URL=$$AGENT_URL"
      fi

      gcloud run deploy ${_SERVICE_NAME}-service \
        --image=us-central1-docker.pkg.dev/$PROJECT_ID/${_SERVICE_NAME}-repo/${_SERVICE_NAME}:latest \
        --platform=managed \
        --region=us-central1 \
        --no-allow-unauthenticated \
        $$DEPLOY_ARGS
    fi

# --- PASO 3: Desplegar Agente de Vertex AI (solo para 'agent-sofia') ---
- name: 'python:3.9' # Usar una imagen oficial de Python.
  id: 'Deploy Vertex AI Agent'
  entrypoint: 'bash'
  args:
  - -c
  - |
    # Este bloque solo se ejecuta SI es el despliegue del agente.
    if [ "$_SERVICE_NAME" == "agent-sofia" ]; then
      echo "Instalando dependencias para el despliegue del agente..."
      pip install -r services/agent-sofia/requirements.txt
      
      echo "Ejecutando script de despliegue del agente de Vertex AI..."
      python services/agent-sofia/deploy.py
    fi

options:
  logging: CLOUD_LOGGING_ONLY